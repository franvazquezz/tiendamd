name: Node.js CI with trpc and Express

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Define la versión de Node.js

      - name: Install dependencies in /backend
        run: cd backend && npm install  # Cambia al directorio backend e instala las dependencias

      - name: Run TypeScript compiler
        run: cd backend && npm run build  # Si usas TypeScript, esto compilará el proyecto en /backend

      #- name: Run tests
      #  run: cd backend && npm test  # Asegúrate de tener tests en el backend

      #- name: Lint code
      #  run: cd backend && npm run lint  # Si tienes configurado un linter (opcional)

      - name: Start the server (for integration tests)
        run: cd backend && npm start &  # Inicia el servidor en segundo plano en /backend

      - name: Wait for the server to start
        run: sleep 10  # Espera 10 segundos para que el servidor se inicie

      #- name: Run Integration tests (if applicable)
      #  run: cd backend && npm run integration-test  # Si tienes pruebas de integración

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies in /backend
        run: cd backend && npm install  # Cambia al directorio backend e instala las dependencias

      - name: Deploy to server
        run:
          # Aquí puedes agregar tu script de despliegue, por ejemplo,
          # usando FTP, AWS, Heroku, etc.
          echo "Deploying to the server..."  # Script de despliegue
